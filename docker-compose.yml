services:
  frontend:
    build:
      context: ./frontend
      dockerfile: docker/Dockerfile
    container_name: real-asc-frontend
    ports:
      - "3000:80"
    networks:
      - app-network
    depends_on:
      - gateway


  auth-app:
    build:
      context: ./services/auth
      dockerfile: Dockerfile
    container_name: auth-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./services/auth:/var/www
      - ./.php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      DB_HOST: auth-db
      DB_DATABASE: auth
      DB_USERNAME: user
      DB_PASSWORD: secret
    networks:
      - app-network
    depends_on:
      - auth-db

  auth-db:
    image: mysql:8.0
    container_name: auth-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: auth
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
    volumes:
      - auth_db_data:/var/lib/mysql
    networks:
      - app-network

  stadium-app:
    build:
      context: ./services/stadium
      dockerfile: Dockerfile
    container_name: stadium-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./services/stadium:/var/www
      - ./.php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      DB_HOST: stadium-db
      DB_DATABASE: stadium
      DB_USERNAME: user
      DB_PASSWORD: secret
    networks:
      - app-network
    depends_on:
      - stadium-db

  stadium-db:
    image: mysql:8.0
    container_name: stadium-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: stadium
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
    volumes:
      - stadium_db_data:/var/lib/mysql
    networks:
      - app-network

  event-app:
    build:
      context: ./services/event
      dockerfile: Dockerfile
    container_name: event-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./services/event:/var/www
      - ./.php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      DB_HOST: event-db
      DB_DATABASE: event
      DB_USERNAME: user
      DB_PASSWORD: secret
    networks:
      - app-network
    depends_on:
      - event-db

  event-db:
    image: mysql:8.0
    container_name: event-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: event
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
    volumes:
      - event_db_data:/var/lib/mysql
    networks:
      - app-network

  comment-app:
    build:
      context: ./services/comment
      dockerfile: Dockerfile
    container_name: comment-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./services/comment:/var/www
      - ./.php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      DB_HOST: comment-db
      DB_DATABASE: comment
      DB_USERNAME: user
      DB_PASSWORD: secret
    networks:
      - app-network
    depends_on:
      - comment-db

  comment-db:
    image: mysql:8.0
    container_name: comment-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: comment
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
    volumes:
      - comment_db_data:/var/lib/mysql
    networks:
      - app-network

  payment-app:
    build:
      context: ./services/payment
      dockerfile: Dockerfile
    container_name: payment-app
    restart: unless-stopped
    working_dir: /var/www
    volumes:
      - ./services/payment:/var/www
      - ./.php/local.ini:/usr/local/etc/php/conf.d/local.ini
    environment:
      DB_HOST: payment-db
      DB_DATABASE: payment
      DB_USERNAME: user
      DB_PASSWORD: secret
      STRIPE_KEY: your_stripe_key
      STRIPE_SECRET: your_stripe_secret
    networks:
      - app-network
    depends_on:
      - payment-db

  payment-db:
    image: mysql:8.0
    container_name: payment-db
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: secret
      MYSQL_DATABASE: payment
      MYSQL_USER: user
      MYSQL_PASSWORD: secret
    volumes:
      - payment_db_data:/var/lib/mysql
    networks:
      - app-network

  gateway:
    image: nginx:latest
    container_name: api-gateway
    restart: unless-stopped
    ports:
      - '80:80'
    volumes:
      - ./docker/nginx/conf.d/default.conf:/etc/nginx/conf.d/default.conf:ro
    networks:
      - app-network
    depends_on:
      - auth-app
      - stadium-app
      - event-app
      - comment-app
      - payment-app

networks:
  app-network:
    driver: bridge

volumes:
  auth_db_data:
  stadium_db_data:
  event_db_data:
  comment_db_data:
  payment_db_data:
